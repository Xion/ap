#!/bin/sh

# Script for preparing the release bundles
#
# This essentially a wrapper script around fpm (https://github.com/jordansissel/fpm).
# Requires fpm to be installed first, which may in turn require Ruby with C headers.
#
# Refer to fpm's README for instructions.
#

# Package information
NAME='rush'
DESCRIPTON='Succinct & readable processing language'
URL='http://github.com/Xion/rush'
LICENSE='GPL v3'
# TODO(xion): share these between this script, Cargo.toml, and the argument parser
# (the last one probably requires custom build.rs)

SOURCE_DIR="./target/release"
BIN='rh'

OUTPUT_DIR="./release"


main() {
    [ -f "Cargo.toml" ] || fatal "Release script must be run from project's root!"

    require cargo
    require fpm

    ensure_release_dir

    log "Creating release bundles..."

    prepare_deb_package

    log "Release bundles created."
}


ensure_release_dir() {
    if [ ! -d "$OUTPUT_DIR" ]; then
        log "Creating output directory ($OUTPUT_DIR)..."
        mkdir -p "$OUTPUT_DIR"
    fi
}

cargo_build() {
    cargo build --release
    [ -f "$BIN" ] || fatal "Failed to build the release binary, aborting."
}


prepare_deb_package() {
    log "Preparing Debian package..."

    bundle deb --prefix /usr/bin
    if [ "$?" -ne 0 ]; then
        fatal "Failed to create Debian package."
    fi
}

bundle() {
    # Create a release bundle by invoking `fpm` with common parameters
    local target="$1" ; shift
    fpm --force --log error \
        --name "$NAME" --description="$DESCRIPTON" --license "$LICENSE" --url "$URL" \
        -s dir -t "$target" -C "$SOURCE_DIR" --package "${OUTPUT_DIR}/${NAME}.$target" \
        "$@" \
        "$BIN"
}


# General Utility functions

require() {
    # Require for an external program to exist, abort the script if not found
    local prog="$1"
    local msg="${2-$prog not found, aborting.}"
    which "$prog" >/dev/null || fatal "$msg\n"
}

fatal() {
    local fmt="$1" ; shift
    log "FATAL: $fmt" "$@"
    exit 1
}

log() {
    local fmt="$1" ; shift
    printf >&2 "\n>>> $fmt\n" "$@"
}


main "$@"
